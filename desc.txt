我对修改接口做了一下的思考：
数据一致性问题：当你更新 MySQL 中的数据后，Redis 中的缓存数据也必须同步更新，否则会出现“脏数据”或“缓存不一致”的情况。
我的想法：先删除相关缓存，确保缓存中不会存在旧数据。 再执行数据库更新操作。不然会导致缓存中存在旧数据。
我们可以采用延迟双删策略：在数据库更新成功后，再删除缓存，这样可以避免缓存穿透。这样做的目的是：第一次删除缓存，防止旧数据被读取
数据库写入后，可能有并发请求在第一次删除缓存和数据库写入之间读取了旧缓存，第二次删除缓存可以清理这些脏缓存。
如果数据库写入失败，缓存已经被删除，可能导致缓存穿透,
我们可以加重试机制：数据库写入失败时，可以重试或恢复缓存。写入失败时，缓存一个空值（带短过期时间），防止缓存穿透。


